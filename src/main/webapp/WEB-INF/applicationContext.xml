<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<bean id="appConfigure"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:appConfigs.properties</value>
			</list>
		</property>
	</bean>
	<!-- spring quartz的相关配置开始 -->
	<!-- <bean id="jobFactoryBean" class="org.quartz.simpl.SimpleJobFactory"> -->
	<!-- 如果jobFactoryBean 配置为上面，job就需要实现quartz的job接口，使用下面的，那么job需要继承spring的QuartzJobBean类就可以 -->
	<bean id="jobFactoryBean"
		class="org.springframework.scheduling.quartz.SpringBeanJobFactory">
	</bean>
	<bean id="quartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="configLocation" value="classpath:quartz.properties" />  <!-- 不起作用 -->
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="exposeSchedulerInRepository" value="true" />
		<property name="jobFactory" ref="jobFactoryBean" />
		<!-- <property name="schedulerListeners">
			<list>
				<ref local="jobTriggerListener" />
			</list>
		</property> -->
		<property name="globalTriggerListeners">
			<list>
				<ref local="jobTriggerListener" />
			</list>
		</property>
	</bean>
	<bean id="jobTriggerListener" class="com.zhxia.quartz.listener.JobTriggerListener">
	</bean>
	<!-- 配置datdaSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		lazy-init="true">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${db.rw.url}" />
		<property name="username" value="${db.rw.username}" />
		<property name="password" value="${db.rw.password}" />
		<property name="initialSize" value="${db.rw.initialSize}" />
		<property name="maxActive" value="${db.rw.maxActive}" />
		<property name="maxIdle" value="${db.rw.maxIdle}" />
		<property name="minIdle" value="${db.rw.minIdle}" />
		<property name="maxWait" value="${db.rw.maxWait}" />
		<property name="poolPreparedStatements" value="true" />
		<property name="defaultReadOnly" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
	</bean>

	<!-- 配置hibernation的sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.zhxia.quartz.model" />
	</bean>

	<!-- 配置HibernateTemplate，用于完成数据操作 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="jobDao" class="com.zhxia.quartz.dao.JobDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="jobBiz" class="com.zhxia.quartz.domain.JobBiz">
		<property name="jobDao" ref="jobDao"></property>
	</bean>
</beans>